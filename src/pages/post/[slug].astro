---
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'
import AllLayout from '../../layouts/AllLayout.astro'
import GoBackButton from '../../components/astro/GoBackButton.astro'
import { countWords, getReadingTime } from '../../utils/readingTime'
import { LuDot } from 'react-icons/lu'
import { formattedDate } from '../../utils/formatDate'
import { Image } from 'astro:assets'
import AuthorAvatar from "@/components/react/AuthorAvatar"

export const getStaticPaths = async () => {
    const blogPosts = await getCollection("post")
    const paths = blogPosts.map((blogPost) => {
        return {
            params: {
                slug: blogPost.slug
            },
            props: {
                blogPost
            }
        }
    })
    return paths
}

type Props = {
    blogPost: CollectionEntry<"post">
}

const {blogPost} = Astro.props
const {Content} = await blogPost.render()


const numberOfWords = countWords(blogPost.body)
const readingTime = getReadingTime(numberOfWords, 130);
const format = formattedDate(blogPost.data.date, {typeOfAnswer: "dayMonthAndYear"})
---

<AllLayout title={`Post | ${blogPost.slug}`} >
    <header class="flex flex-col max-lg:flex-col-reverse gap-4 ">
        <div class="flex flex-col items-center justify-center ">
            <div class="w-full flex flex-col items-center max-sm:items-start   max-sm:pt-0 z-50 gap-2 text-center px-2">
                <div class="w-full flex items-start">
                    <GoBackButton/>
                </div>
                <h1 class="text-5xl font-extrabold drop-shadow-2xl max-lg:text-4xl">{blogPost.data.title}</h1>
                <p class="text-xl">{blogPost.data.description}</p>
                <section class="flex items-center gap-2 px-4 py-2 ">
                    <div class="flex items-center gap-4">
                        <div class="w-12 h-12 rounded-full flex items-center justify-center ">
                            <AuthorAvatar client:load/>
                        </div>
                        <h1 class="text-sm">{blogPost.data.author}</h1>
                    </div>
                    <LuDot className='text-gray-200/95 max-sm:hidden'/>
                    <span class="text-sm max-sm:hidden">{readingTime.toFixed(0).toString() + " min de leitura"}</span>
                    <LuDot className='text-gray-200/95'/>
                    <span class="text-sm">{format}</span>
                </section>
           </div>
         <div class="flex flex-col items-center gap-2">
            <figure>
                <Image src={blogPost.data.banner_image} 
                alt="Banner Img" class="w-full" format="webp"/>
            </figure>
            <p class="text-zinc-400 font-medium ">Imagem do site <a href="https://unsplash.com/pt-br">https://unsplash.com/pt-br</a> </p>
         </div>
           
        </div>
       
    </header>

 

    <article class="w-full font-roboto prose prose-white prose-code:text-blue-500 prose-headings:text-white prose-lg overflow-visible mb-4 max-md:px-4  text-white mx-auto mt-8 prose-strong:text-white">
        <Content/>
    </article>
</AllLayout>